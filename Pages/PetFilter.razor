@page "/petfilter"
@inject MonitoringAPIClient API
<AuthorizeView>
    <Authorized>
        <h3>Pet Filter</h3>
        <p>This component demonstrates fetching of pet filter metrics.</p>

        <p>
            Filter by criteria
            <select class="bold backgroundLightBlue" @onchange="@GetPetCriteria">
                <option class="bold" value="All">All</option>
                @foreach (var c in petCriterias)
                {
                    <option class="bold" value="@c">@c</option>
                }
            </select>
        </p>

        <p>
            Filter by value
            <select class="bold backgroundLightBlue">
                <option class="bold" value="All">All</option>
                @foreach (var v in values)
                {
                    <option class="bold" value="@v">@v</option>
                }
            </select>
        </p>
    </Authorized>
    <NotAuthorized>
        <h3>Access Denied</h3>
        <p>Please contact an administrator.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    /*
     * Filter Criteria => Value
     * Filter Criterias: Category, Breed, Age, Gender
     * Values: null, Male, Female, Bird, Fish, Reptile, Cat, Dog
     *
     * {
     * "id": 34,
     * "value": "African Grey",
     * "filterCriteria": "Breed",
     * "dateAndTime": "2021-10-20T15:56:54",
     * "numberRecordsReturned": 1
     * }
     *
     */
    IEnumerable<string> petCriterias = new List<string>();
    List<string> values = new List<string>();

    protected override async void OnInitialized()
    {
        petCriterias = await API.GetDistinctPetFilterCriteria();
        StateHasChanged();
    }

    protected async Task GetPetCriteria(ChangeEventArgs e)
    {
        if (e.Value.ToString() == "Gender")
        {
            values.Clear();
            values.Add("Male");
            values.Add("Female");
        }
        if (e.Value.ToString() == "Category")
        {
            var list = await API.GetDistinctCategories();
            values = list.ToList();
        }
        if (e.Value.ToString() == "Breed")
        {
            var list = await API.GetDistinctPetFilterBreed();
            values = list.ToList();
        }
        //values = await API.GetDistinctPetFilterValues();
    }
}
